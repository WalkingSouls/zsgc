<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="noticeDAO">
	<resultMap id="BaseResultMap" type="com.zsgc.core.model.Notice">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="u_id" jdbcType="INTEGER" property="uId" />
		<result column="is_read" jdbcType="INTEGER" property="isRead" />
		<result column="del_desc" jdbcType="VARCHAR" property="delDesc" />
		<result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, u_id, is_read, del_desc, creat_time, update_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ot_notice
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		ot_notice
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zsgc.core.model.Notice">
		insert into ot_notice (id,
		u_id, is_read,
		del_desc, creat_time, update_time
		)
		values
		(#{id,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER},
		#{isRead,jdbcType=INTEGER},
		#{delDesc,jdbcType=VARCHAR},
		#{creatTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.zsgc.core.model.Notice">
		insert into ot_notice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uId != null">
				u_id,
			</if>
			<if test="isRead != null">
				is_read,
			</if>
			<if test="delDesc != null">
				del_desc,
			</if>
			<if test="creatTime != null">
				creat_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uId != null">
				#{uId,jdbcType=INTEGER},
			</if>
			<if test="isRead != null">
				#{isRead,jdbcType=INTEGER},
			</if>
			<if test="delDesc != null">
				#{delDesc,jdbcType=VARCHAR},
			</if>
			<if test="creatTime != null">
				#{creatTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zsgc.core.model.Notice">
		update ot_notice
		<set>
			<if test="uId != null">
				u_id = #{uId,jdbcType=INTEGER},
			</if>
			<if test="isRead != null">
				is_read = #{isRead,jdbcType=INTEGER},
			</if>
			<if test="delDesc != null">
				del_desc = #{delDesc,jdbcType=VARCHAR},
			</if>
			<if test="creatTime != null">
				creat_time = #{creatTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zsgc.core.model.Notice">
		update ot_notice
		set u_id = #{uId,jdbcType=INTEGER},
		is_read =
		#{isRead,jdbcType=INTEGER},
		del_desc = #{delDesc,jdbcType=VARCHAR},
		creat_time = #{creatTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<insert id="insertMore" parameterType="java.util.List">
		insert into ot_notice (u_id, is_read,
		del_desc, creat_time,
		update_time) values
		<foreach collection="list" item="bean" index="index"
			separator=",">
			(
			#{bean.uId,jdbcType=INTEGER},
			#{bean.isRead,jdbcType=INTEGER},
			#{bean.delDesc,jdbcType=VARCHAR},
			#{bean.creatTime,jdbcType=TIMESTAMP},
			#{bean.updateTime,jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>
</mapper>