<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="couponConfigDAO">
  <resultMap id="couponConfig" type="com.zsgc.core.model.CouponConfig">
    <result property="id" column="id" />
    <result property="code" column="code" />
    <result property="name" column="name" />
    <result property="isUse" column="is_use" />
    <result property="type" column="type" />
    <result property="sendThreshold" column="send_threshold" />
    <result property="financeType" column="finance_type" />
    <result property="deadlineType" column="deadline_type" />
    <result property="deadline" column="deadline" />
    <result property="moneyMin" column="money_min" />
    <result property="moneyMax" column="money_max" />
    <result property="minInvestMoney" column="min_invest_money" />
    <result property="validityDays" column="validity_days" />
    <result property="remark" column="remark" />
    <result property="createdAt" column="created_at" />
    <result property="updatedAt" column="updated_at" />
  </resultMap>

  <sql id="sql_insert_column_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,id</if>
      <if test="entity.code != null and entity.code != ''">,code</if>
      <if test="entity.name != null and entity.name != ''">,name</if>
      <if test="entity.isUse != null">,is_use</if>
      <if test="entity.type != null">,type</if>
      <if test="entity.sendThreshold != null">,send_threshold</if>
      <if test="entity.financeType != null and entity.financeType != ''">,finance_type</if>
      <if test="entity.deadlineType != null and entity.deadlineType != ''">,deadline_type</if>
      <if test="entity.deadline != null">,deadline</if>
      <if test="entity.moneyMin != null">,money_min</if>
      <if test="entity.moneyMax != null">,money_max</if>
      <if test="entity.minInvestMoney != null">,min_invest_money</if>
      <if test="entity.validityDays != null">,validity_days</if>
      <if test="entity.remark != null and entity.remark != ''">,remark</if>
      <if test="entity.createdAt != null">,created_at</if>
      <if test="entity.createdAt == null">,created_at</if>
      <if test="entity.updatedAt != null">,updated_at</if>
      <if test="entity.updatedAt == null">,updated_at</if>
    </trim>
  </sql>

  <sql id="sql_insert_property_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,#{entity.id}</if>
      <if test="entity.code != null and entity.code != ''">,#{entity.code}</if>
      <if test="entity.name != null and entity.name != ''">,#{entity.name}</if>
      <if test="entity.isUse != null">,#{entity.isUse}</if>
      <if test="entity.type != null">,#{entity.type}</if>
      <if test="entity.sendThreshold != null">,#{entity.sendThreshold}</if>
      <if test="entity.financeType != null and entity.financeType != ''">,#{entity.financeType}</if>
      <if test="entity.deadlineType != null and entity.deadlineType != ''">,#{entity.deadlineType}</if>
      <if test="entity.deadline != null">,#{entity.deadline}</if>
      <if test="entity.moneyMin != null">,#{entity.moneyMin}</if>
      <if test="entity.moneyMax != null">,#{entity.moneyMax}</if>
      <if test="entity.minInvestMoney != null">,#{entity.minInvestMoney}</if>
      <if test="entity.validityDays != null">,#{entity.validityDays}</if>
      <if test="entity.remark != null and entity.remark != ''">,#{entity.remark}</if>
      <if test="entity.createdAt != null">,#{entity.createdAt}</if>
      <if test="entity.createdAt == null">,NOW()</if>
      <if test="entity.updatedAt != null">,#{entity.updatedAt}</if>
      <if test="entity.updatedAt == null">,NOW()</if>
    </trim>
  </sql>

  <sql id="sql_column_list">
    id
    ,code
    ,name
    ,is_use
    ,type
    ,send_threshold
    ,finance_type
    ,deadline_type
    ,deadline
    ,money_min
    ,money_max
    ,min_invest_money
    ,validity_days
    ,remark
    ,created_at
    ,updated_at
  </sql>

  <sql id="sql_update_set">
    <trim prefix="SET" prefixOverrides=",">
      <if test="entity != null">
        <choose>
          <when test="entity.forceUpdateProperties.contains('id')">
            ,id = #{entity.id, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.id != null">,id = #{entity.id}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('code')">
            ,code = #{entity.code, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.code != null and entity.code != ''">,code = #{entity.code}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('name')">
            ,name = #{entity.name, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.name != null and entity.name != ''">,name = #{entity.name}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('isUse')">
            ,is_use = #{entity.isUse, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.isUse != null">,is_use = #{entity.isUse}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('type')">
            ,type = #{entity.type, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.type != null">,type = #{entity.type}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('sendThreshold')">
            ,send_threshold = #{entity.sendThreshold, jdbcType=DECIMAL}
          </when>
          <otherwise>
            <if test="entity.sendThreshold != null">,send_threshold = #{entity.sendThreshold}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('financeType')">
            ,finance_type = #{entity.financeType, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.financeType != null and entity.financeType != ''">,finance_type = #{entity.financeType}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('deadlineType')">
            ,deadline_type = #{entity.deadlineType, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.deadlineType != null and entity.deadlineType != ''">,deadline_type = #{entity.deadlineType}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('deadline')">
            ,deadline = #{entity.deadline, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.deadline != null">,deadline = #{entity.deadline}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('moneyMin')">
            ,money_min = #{entity.moneyMin, jdbcType=DECIMAL}
          </when>
          <otherwise>
            <if test="entity.moneyMin != null">,money_min = #{entity.moneyMin}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('moneyMax')">
            ,money_max = #{entity.moneyMax, jdbcType=DECIMAL}
          </when>
          <otherwise>
            <if test="entity.moneyMax != null">,money_max = #{entity.moneyMax}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('minInvestMoney')">
            ,min_invest_money = #{entity.minInvestMoney, jdbcType=DECIMAL}
          </when>
          <otherwise>
            <if test="entity.minInvestMoney != null">,min_invest_money = #{entity.minInvestMoney}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('validityDays')">
            ,validity_days = #{entity.validityDays, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.validityDays != null">,validity_days = #{entity.validityDays}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('remark')">
            ,remark = #{entity.remark, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.remark != null and entity.remark != ''">,remark = #{entity.remark}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('createdAt')">
            ,created_at = #{entity.createdAt, jdbcType=TIMESTAMP}
          </when>
          <otherwise>
            <if test="entity.createdAt != null">,created_at = #{entity.createdAt}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('updatedAt')">
            ,updated_at = #{entity.updatedAt, jdbcType=TIMESTAMP}
          </when>
          <otherwise>
            <if test="entity.updatedAt != null">,updated_at = #{entity.updatedAt}</if>
            <if test="entity.updatedAt == null">,updated_at = NOW()</if>
          </otherwise>
        </choose>
        <if test="!entity.incrementUpdateMap.isEmpty()">
          ,
          <foreach collection="entity.incrementUpdateMap" index="key" item="value" separator=",">
            ${key} = ${key} + #{value}
          </foreach>
        </if>
      </if>
    </trim>
  </sql>

  <sql id="sql_condition">
    <if test="condition != null">
      <if test="condition.id != null">AND id = #{condition.id}</if>
      <if test="condition.code != null and condition.code != ''">AND code = #{condition.code}</if>
      <if test="condition.name != null and condition.name != ''">AND name = #{condition.name}</if>
      <if test="condition.isUse != null">AND is_use = #{condition.isUse}</if>
      <if test="condition.type != null">AND type = #{condition.type}</if>
      <if test="condition.sendThreshold != null">AND send_threshold = #{condition.sendThreshold}</if>
      <if test="condition.financeType != null and condition.financeType != ''">AND finance_type = #{condition.financeType}</if>
      <if test="condition.deadlineType != null and condition.deadlineType != ''">AND deadline_type = #{condition.deadlineType}</if>
      <if test="condition.deadline != null">AND deadline = #{condition.deadline}</if>
      <if test="condition.moneyMin != null">AND money_min = #{condition.moneyMin}</if>
      <if test="condition.moneyMax != null">AND money_max = #{condition.moneyMax}</if>
      <if test="condition.minInvestMoney != null">AND min_invest_money = #{condition.minInvestMoney}</if>
      <if test="condition.validityDays != null">AND validity_days = #{condition.validityDays}</if>
      <if test="condition.remark != null and condition.remark != ''">AND remark = #{condition.remark}</if>
      <if test="condition.createdAt != null">AND created_at = #{condition.createdAt}</if>
      <if test="condition.updatedAt != null">AND updated_at = #{condition.updatedAt}</if>
      <if test="!condition.expressionChainList.empty">
        AND
        <foreach collection="condition.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  ${expression.column} ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  ${expression.column} ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  ${expression.column} ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </if>
  </sql>

  <sql id="sql_pagination_start">
  <![CDATA[
  ]]>
  </sql>

  <sql id="sql_pagination_end">
  <![CDATA[
    LIMIT #{offset}, #{limit}
  ]]>
  </sql>

  <insert id="insert" parameterType="java.util.Map">
    <selectKey keyProperty="entity.id" resultType="java.lang.Integer" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO ot_coupon_config (
      <include refid="sql_insert_column_list" />
    ) VALUES (
      <include refid="sql_insert_property_list" />
    )
  </insert>

  <select id="get" parameterType="java.util.Map" resultMap="couponConfig">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_coupon_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="getById" parameterType="java.util.Map" resultMap="couponConfig">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_coupon_config
    WHERE id = #{id}
  </select>

  <select id="find" parameterType="java.util.Map" resultMap="couponConfig">
    <if test="offset != null">
      <include refid="sql_pagination_start" />
    </if>
    SELECT
      <include refid="sql_column_list" />
    FROM ot_coupon_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="offset != null">
      <include refid="sql_pagination_end" />
    </if>
  </select>

  <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(${count_column}) AS count_ FROM ot_coupon_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT ${aggregate_sql} FROM ot_coupon_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <update id="update" parameterType="java.util.Map">
    UPDATE ot_coupon_config
    <include refid="sql_update_set" />
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </update>

  <update id="updateById" parameterType="java.util.Map">
    UPDATE ot_coupon_config
    <include refid="sql_update_set" />
    WHERE id = #{id}
  </update>

  <delete id="remove" parameterType="java.util.Map">
    DELETE FROM ot_coupon_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </delete>

  <delete id="removeById" parameterType="java.util.Map">
    DELETE FROM ot_coupon_config
    WHERE id = #{id}
  </delete>
</mapper>
