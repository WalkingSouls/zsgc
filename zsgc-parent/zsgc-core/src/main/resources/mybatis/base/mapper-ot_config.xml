<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="configDAO">
  <resultMap id="config" type="com.zsgc.core.model.Config">
    <result property="id" column="id" />
    <result property="name" column="name" />
    <result property="type" column="type" />
    <result property="title" column="title" />
    <result property="configGroup" column="config_group" />
    <result property="extra" column="extra" />
    <result property="remark" column="remark" />
    <result property="createdAt" column="created_at" />
    <result property="updatedAt" column="updated_at" />
    <result property="status" column="status" />
    <result property="configValue" column="config_value" />
    <result property="sortOrder" column="sort_order" />
  </resultMap>

  <sql id="sql_insert_column_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,id</if>
      <if test="entity.name != null and entity.name != ''">,name</if>
      <if test="entity.type != null">,type</if>
      <if test="entity.title != null and entity.title != ''">,title</if>
      <if test="entity.configGroup != null">,config_group</if>
      <if test="entity.extra != null and entity.extra != ''">,extra</if>
      <if test="entity.remark != null and entity.remark != ''">,remark</if>
      <if test="entity.createdAt != null">,created_at</if>
      <if test="entity.createdAt == null">,created_at</if>
      <if test="entity.updatedAt != null">,updated_at</if>
      <if test="entity.updatedAt == null">,updated_at</if>
      <if test="entity.status != null">,status</if>
      <if test="entity.configValue != null and entity.configValue != ''">,config_value</if>
      <if test="entity.sortOrder != null">,sort_order</if>
    </trim>
  </sql>

  <sql id="sql_insert_property_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,#{entity.id}</if>
      <if test="entity.name != null and entity.name != ''">,#{entity.name}</if>
      <if test="entity.type != null">,#{entity.type}</if>
      <if test="entity.title != null and entity.title != ''">,#{entity.title}</if>
      <if test="entity.configGroup != null">,#{entity.configGroup}</if>
      <if test="entity.extra != null and entity.extra != ''">,#{entity.extra}</if>
      <if test="entity.remark != null and entity.remark != ''">,#{entity.remark}</if>
      <if test="entity.createdAt != null">,#{entity.createdAt}</if>
      <if test="entity.createdAt == null">,NOW()</if>
      <if test="entity.updatedAt != null">,#{entity.updatedAt}</if>
      <if test="entity.updatedAt == null">,NOW()</if>
      <if test="entity.status != null">,#{entity.status}</if>
      <if test="entity.configValue != null and entity.configValue != ''">,#{entity.configValue}</if>
      <if test="entity.sortOrder != null">,#{entity.sortOrder}</if>
    </trim>
  </sql>

  <sql id="sql_column_list">
    id
    ,name
    ,type
    ,title
    ,config_group
    ,extra
    ,remark
    ,created_at
    ,updated_at
    ,status
    ,config_value
    ,sort_order
  </sql>

  <sql id="sql_update_set">
    <trim prefix="SET" prefixOverrides=",">
      <if test="entity != null">
        <choose>
          <when test="entity.forceUpdateProperties.contains('id')">
            ,id = #{entity.id, jdbcType=BIGINT}
          </when>
          <otherwise>
            <if test="entity.id != null">,id = #{entity.id}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('name')">
            ,name = #{entity.name, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.name != null and entity.name != ''">,name = #{entity.name}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('type')">
            ,type = #{entity.type, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.type != null">,type = #{entity.type}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('title')">
            ,title = #{entity.title, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.title != null and entity.title != ''">,title = #{entity.title}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('configGroup')">
            ,config_group = #{entity.configGroup, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.configGroup != null">,config_group = #{entity.configGroup}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('extra')">
            ,extra = #{entity.extra, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.extra != null and entity.extra != ''">,extra = #{entity.extra}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('remark')">
            ,remark = #{entity.remark, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.remark != null and entity.remark != ''">,remark = #{entity.remark}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('createdAt')">
            ,created_at = #{entity.createdAt, jdbcType=TIMESTAMP}
          </when>
          <otherwise>
            <if test="entity.createdAt != null">,created_at = #{entity.createdAt}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('updatedAt')">
            ,updated_at = #{entity.updatedAt, jdbcType=TIMESTAMP}
          </when>
          <otherwise>
            <if test="entity.updatedAt != null">,updated_at = #{entity.updatedAt}</if>
            <if test="entity.updatedAt == null">,updated_at = NOW()</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('status')">
            ,status = #{entity.status, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.status != null">,status = #{entity.status}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('configValue')">
            ,config_value = #{entity.configValue, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.configValue != null and entity.configValue != ''">,config_value = #{entity.configValue}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('sortOrder')">
            ,sort_order = #{entity.sortOrder, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.sortOrder != null">,sort_order = #{entity.sortOrder}</if>
          </otherwise>
        </choose>
        <if test="!entity.incrementUpdateMap.isEmpty()">
          ,
          <foreach collection="entity.incrementUpdateMap" index="key" item="value" separator=",">
            ${key} = ${key} + #{value}
          </foreach>
        </if>
      </if>
    </trim>
  </sql>

  <sql id="sql_condition">
    <if test="condition != null">
      <if test="condition.id != null">AND id = #{condition.id}</if>
      <if test="condition.name != null and condition.name != ''">AND name = #{condition.name}</if>
      <if test="condition.type != null">AND type = #{condition.type}</if>
      <if test="condition.title != null and condition.title != ''">AND title = #{condition.title}</if>
      <if test="condition.configGroup != null">AND config_group = #{condition.configGroup}</if>
      <if test="condition.extra != null and condition.extra != ''">AND extra = #{condition.extra}</if>
      <if test="condition.remark != null and condition.remark != ''">AND remark = #{condition.remark}</if>
      <if test="condition.createdAt != null">AND created_at = #{condition.createdAt}</if>
      <if test="condition.updatedAt != null">AND updated_at = #{condition.updatedAt}</if>
      <if test="condition.status != null">AND status = #{condition.status}</if>
      <if test="condition.configValue != null and condition.configValue != ''">AND config_value = #{condition.configValue}</if>
      <if test="condition.sortOrder != null">AND sort_order = #{condition.sortOrder}</if>
      <if test="!condition.expressionChainList.empty">
        AND
        <foreach collection="condition.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  ${expression.column} ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  ${expression.column} ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  ${expression.column} ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </if>
  </sql>

  <sql id="sql_pagination_start">
  <![CDATA[
  ]]>
  </sql>

  <sql id="sql_pagination_end">
  <![CDATA[
    LIMIT #{offset}, #{limit}
  ]]>
  </sql>

  <insert id="insert" parameterType="java.util.Map">
    <selectKey keyProperty="entity.id" resultType="java.lang.Long" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO ot_config (
      <include refid="sql_insert_column_list" />
    ) VALUES (
      <include refid="sql_insert_property_list" />
    )
  </insert>

  <select id="get" parameterType="java.util.Map" resultMap="config">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="getById" parameterType="java.util.Map" resultMap="config">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_config
    WHERE id = #{id}
  </select>

  <select id="find" parameterType="java.util.Map" resultMap="config">
    <if test="offset != null">
      <include refid="sql_pagination_start" />
    </if>
    SELECT
      <include refid="sql_column_list" />
    FROM ot_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="offset != null">
      <include refid="sql_pagination_end" />
    </if>
  </select>

  <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(${count_column}) AS count_ FROM ot_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT ${aggregate_sql} FROM ot_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <update id="update" parameterType="java.util.Map">
    UPDATE ot_config
    <include refid="sql_update_set" />
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </update>

  <update id="updateById" parameterType="java.util.Map">
    UPDATE ot_config
    <include refid="sql_update_set" />
    WHERE id = #{id}
  </update>

  <delete id="remove" parameterType="java.util.Map">
    DELETE FROM ot_config
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </delete>

  <delete id="removeById" parameterType="java.util.Map">
    DELETE FROM ot_config
    WHERE id = #{id}
  </delete>
</mapper>
