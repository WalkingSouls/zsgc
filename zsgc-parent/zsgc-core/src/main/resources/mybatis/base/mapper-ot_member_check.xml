<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberCheckDAO">
  <resultMap id="memberCheck" type="com.zsgc.core.model.MemberCheck">
    <result property="id" column="id" />
    <result property="uid" column="uid" />
    <result property="place" column="place" />
    <result property="name" column="name" />
    <result property="idCard" column="id_card" />
    <result property="status" column="status" />
    <result property="adminId" column="admin_id" />
    <result property="picFront" column="pic_front" />
    <result property="picBeside" column="pic_beside" />
    <result property="picHand" column="pic_hand" />
    <result property="note" column="note" />
    <result property="createdAt" column="created_at" />
    <result property="checkTime" column="check_time" />
    <result property="updatedAt" column="updated_at" />
    <result property="esignAccountId" column="esign_account_id" />
    <result property="esignSealData" column="esign_seal_data" />
  </resultMap>

  <sql id="sql_insert_column_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,id</if>
      <if test="entity.uid != null">,uid</if>
      <if test="entity.place != null and entity.place != ''">,place</if>
      <if test="entity.name != null and entity.name != ''">,name</if>
      <if test="entity.idCard != null and entity.idCard != ''">,id_card</if>
      <if test="entity.status != null">,status</if>
      <if test="entity.adminId != null">,admin_id</if>
      <if test="entity.picFront != null and entity.picFront != ''">,pic_front</if>
      <if test="entity.picBeside != null and entity.picBeside != ''">,pic_beside</if>
      <if test="entity.picHand != null and entity.picHand != ''">,pic_hand</if>
      <if test="entity.note != null and entity.note != ''">,note</if>
      <if test="entity.createdAt != null">,created_at</if>
      <if test="entity.createdAt == null">,created_at</if>
      <if test="entity.checkTime != null">,check_time</if>
      <if test="entity.updatedAt != null">,updated_at</if>
      <if test="entity.updatedAt == null">,updated_at</if>
      <if test="entity.esignAccountId != null and entity.esignAccountId != ''">,esign_account_id</if>
      <if test="entity.esignSealData != null and entity.esignSealData != ''">,esign_seal_data</if>
    </trim>
  </sql>

  <sql id="sql_insert_property_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,#{entity.id}</if>
      <if test="entity.uid != null">,#{entity.uid}</if>
      <if test="entity.place != null and entity.place != ''">,#{entity.place}</if>
      <if test="entity.name != null and entity.name != ''">,#{entity.name}</if>
      <if test="entity.idCard != null and entity.idCard != ''">,#{entity.idCard}</if>
      <if test="entity.status != null">,#{entity.status}</if>
      <if test="entity.adminId != null">,#{entity.adminId}</if>
      <if test="entity.picFront != null and entity.picFront != ''">,#{entity.picFront}</if>
      <if test="entity.picBeside != null and entity.picBeside != ''">,#{entity.picBeside}</if>
      <if test="entity.picHand != null and entity.picHand != ''">,#{entity.picHand}</if>
      <if test="entity.note != null and entity.note != ''">,#{entity.note}</if>
      <if test="entity.createdAt != null">,#{entity.createdAt}</if>
      <if test="entity.createdAt == null">,NOW()</if>
      <if test="entity.checkTime != null">,#{entity.checkTime}</if>
      <if test="entity.updatedAt != null">,#{entity.updatedAt}</if>
      <if test="entity.updatedAt == null">,NOW()</if>
      <if test="entity.esignAccountId != null and entity.esignAccountId != ''">,#{entity.esignAccountId}</if>
      <if test="entity.esignSealData != null and entity.esignSealData != ''">,#{entity.esignSealData}</if>
    </trim>
  </sql>

  <sql id="sql_column_list">
    id
    ,uid
    ,place
    ,name
    ,id_card
    ,status
    ,admin_id
    ,pic_front
    ,pic_beside
    ,pic_hand
    ,note
    ,created_at
    ,check_time
    ,updated_at
    ,esign_account_id
    ,esign_seal_data
  </sql>

  <sql id="sql_update_set">
    <trim prefix="SET" prefixOverrides=",">
      <if test="entity != null">
        <choose>
          <when test="entity.forceUpdateProperties.contains('id')">
            ,id = #{entity.id, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.id != null">,id = #{entity.id}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('uid')">
            ,uid = #{entity.uid, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.uid != null">,uid = #{entity.uid}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('place')">
            ,place = #{entity.place, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.place != null and entity.place != ''">,place = #{entity.place}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('name')">
            ,name = #{entity.name, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.name != null and entity.name != ''">,name = #{entity.name}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('idCard')">
            ,id_card = #{entity.idCard, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.idCard != null and entity.idCard != ''">,id_card = #{entity.idCard}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('status')">
            ,status = #{entity.status, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.status != null">,status = #{entity.status}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('adminId')">
            ,admin_id = #{entity.adminId, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.adminId != null">,admin_id = #{entity.adminId}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('picFront')">
            ,pic_front = #{entity.picFront, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.picFront != null and entity.picFront != ''">,pic_front = #{entity.picFront}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('picBeside')">
            ,pic_beside = #{entity.picBeside, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.picBeside != null and entity.picBeside != ''">,pic_beside = #{entity.picBeside}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('picHand')">
            ,pic_hand = #{entity.picHand, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.picHand != null and entity.picHand != ''">,pic_hand = #{entity.picHand}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('note')">
            ,note = #{entity.note, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.note != null and entity.note != ''">,note = #{entity.note}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('createdAt')">
            ,created_at = #{entity.createdAt, jdbcType=TIMESTAMP}
          </when>
          <otherwise>
            <if test="entity.createdAt != null">,created_at = #{entity.createdAt}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('checkTime')">
            ,check_time = #{entity.checkTime, jdbcType=TIMESTAMP}
          </when>
          <otherwise>
            <if test="entity.checkTime != null">,check_time = #{entity.checkTime}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('updatedAt')">
            ,updated_at = #{entity.updatedAt, jdbcType=TIMESTAMP}
          </when>
          <otherwise>
            <if test="entity.updatedAt != null">,updated_at = #{entity.updatedAt}</if>
            <if test="entity.updatedAt == null">,updated_at = NOW()</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('esignAccountId')">
            ,esign_account_id = #{entity.esignAccountId, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.esignAccountId != null and entity.esignAccountId != ''">,esign_account_id = #{entity.esignAccountId}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('esignSealData')">
            ,esign_seal_data = #{entity.esignSealData, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.esignSealData != null and entity.esignSealData != ''">,esign_seal_data = #{entity.esignSealData}</if>
          </otherwise>
        </choose>
        <if test="!entity.incrementUpdateMap.isEmpty()">
          ,
          <foreach collection="entity.incrementUpdateMap" index="key" item="value" separator=",">
            ${key} = ${key} + #{value}
          </foreach>
        </if>
      </if>
    </trim>
  </sql>

  <sql id="sql_condition">
    <if test="condition != null">
      <if test="condition.id != null">AND id = #{condition.id}</if>
      <if test="condition.uid != null">AND uid = #{condition.uid}</if>
      <if test="condition.place != null and condition.place != ''">AND place = #{condition.place}</if>
      <if test="condition.name != null and condition.name != ''">AND name = #{condition.name}</if>
      <if test="condition.idCard != null and condition.idCard != ''">AND id_card = #{condition.idCard}</if>
      <if test="condition.status != null">AND status = #{condition.status}</if>
      <if test="condition.adminId != null">AND admin_id = #{condition.adminId}</if>
      <if test="condition.picFront != null and condition.picFront != ''">AND pic_front = #{condition.picFront}</if>
      <if test="condition.picBeside != null and condition.picBeside != ''">AND pic_beside = #{condition.picBeside}</if>
      <if test="condition.picHand != null and condition.picHand != ''">AND pic_hand = #{condition.picHand}</if>
      <if test="condition.note != null and condition.note != ''">AND note = #{condition.note}</if>
      <if test="condition.createdAt != null">AND created_at = #{condition.createdAt}</if>
      <if test="condition.checkTime != null">AND check_time = #{condition.checkTime}</if>
      <if test="condition.updatedAt != null">AND updated_at = #{condition.updatedAt}</if>
      <if test="condition.esignAccountId != null and condition.esignAccountId != ''">AND esign_account_id = #{condition.esignAccountId}</if>
      <if test="condition.esignSealData != null and condition.esignSealData != ''">AND esign_seal_data = #{condition.esignSealData}</if>
      <if test="!condition.expressionChainList.empty">
        AND
        <foreach collection="condition.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  ${expression.column} ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  ${expression.column} ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  ${expression.column} ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </if>
  </sql>

  <sql id="sql_pagination_start">
  <![CDATA[
  ]]>
  </sql>

  <sql id="sql_pagination_end">
  <![CDATA[
    LIMIT #{offset}, #{limit}
  ]]>
  </sql>

  <insert id="insert" parameterType="java.util.Map">
    <selectKey keyProperty="entity.id" resultType="java.lang.Integer" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO ot_member_check (
      <include refid="sql_insert_column_list" />
    ) VALUES (
      <include refid="sql_insert_property_list" />
    )
  </insert>

  <select id="get" parameterType="java.util.Map" resultMap="memberCheck">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_member_check
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="getById" parameterType="java.util.Map" resultMap="memberCheck">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_member_check
    WHERE id = #{id}
  </select>

  <select id="find" parameterType="java.util.Map" resultMap="memberCheck">
    <if test="offset != null">
      <include refid="sql_pagination_start" />
    </if>
    SELECT
      <include refid="sql_column_list" />
    FROM ot_member_check
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="offset != null">
      <include refid="sql_pagination_end" />
    </if>
  </select>

  <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(${count_column}) AS count_ FROM ot_member_check
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT ${aggregate_sql} FROM ot_member_check
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <update id="update" parameterType="java.util.Map">
    UPDATE ot_member_check
    <include refid="sql_update_set" />
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </update>

  <update id="updateById" parameterType="java.util.Map">
    UPDATE ot_member_check
    <include refid="sql_update_set" />
    WHERE id = #{id}
  </update>

  <delete id="remove" parameterType="java.util.Map">
    DELETE FROM ot_member_check
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </delete>

  <delete id="removeById" parameterType="java.util.Map">
    DELETE FROM ot_member_check
    WHERE id = #{id}
  </delete>
</mapper>
