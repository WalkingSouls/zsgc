<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shortMessageDAO">
  <resultMap id="shortMessage" type="com.zsgc.core.model.ShortMessage">
    <result property="id" column="id" />
    <result property="code" column="code" />
    <result property="type" column="type" />
    <result property="validTime" column="valid_time" />
    <result property="mobile" column="mobile" />
    <result property="userId" column="user_id" />
    <result property="requestTimes" column="request_times" />
    <result property="status" column="status" />
    <result property="createdAt" column="created_at" />
  </resultMap>

  <sql id="sql_insert_column_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,id</if>
      <if test="entity.code != null and entity.code != ''">,code</if>
      <if test="entity.type != null">,type</if>
      <if test="entity.validTime != null">,valid_time</if>
      <if test="entity.mobile != null and entity.mobile != ''">,mobile</if>
      <if test="entity.userId != null">,user_id</if>
      <if test="entity.requestTimes != null">,request_times</if>
      <if test="entity.status != null">,status</if>
      <if test="entity.createdAt != null">,created_at</if>
      <if test="entity.createdAt == null">,created_at</if>
    </trim>
  </sql>

  <sql id="sql_insert_property_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,#{entity.id}</if>
      <if test="entity.code != null and entity.code != ''">,#{entity.code}</if>
      <if test="entity.type != null">,#{entity.type}</if>
      <if test="entity.validTime != null">,#{entity.validTime}</if>
      <if test="entity.mobile != null and entity.mobile != ''">,#{entity.mobile}</if>
      <if test="entity.userId != null">,#{entity.userId}</if>
      <if test="entity.requestTimes != null">,#{entity.requestTimes}</if>
      <if test="entity.status != null">,#{entity.status}</if>
      <if test="entity.createdAt != null">,#{entity.createdAt}</if>
      <if test="entity.createdAt == null">,NOW()</if>
    </trim>
  </sql>

  <sql id="sql_column_list">
    id
    ,code
    ,type
    ,valid_time
    ,mobile
    ,user_id
    ,request_times
    ,status
    ,created_at
  </sql>

  <sql id="sql_update_set">
    <trim prefix="SET" prefixOverrides=",">
      <if test="entity != null">
        <choose>
          <when test="entity.forceUpdateProperties.contains('id')">
            ,id = #{entity.id, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.id != null">,id = #{entity.id}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('code')">
            ,code = #{entity.code, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.code != null and entity.code != ''">,code = #{entity.code}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('type')">
            ,type = #{entity.type, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.type != null">,type = #{entity.type}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('validTime')">
            ,valid_time = #{entity.validTime, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.validTime != null">,valid_time = #{entity.validTime}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('mobile')">
            ,mobile = #{entity.mobile, jdbcType=CHAR}
          </when>
          <otherwise>
            <if test="entity.mobile != null and entity.mobile != ''">,mobile = #{entity.mobile}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('userId')">
            ,user_id = #{entity.userId, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.userId != null">,user_id = #{entity.userId}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('requestTimes')">
            ,request_times = #{entity.requestTimes, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.requestTimes != null">,request_times = #{entity.requestTimes}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('status')">
            ,status = #{entity.status, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.status != null">,status = #{entity.status}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('createdAt')">
            ,created_at = #{entity.createdAt, jdbcType=TIMESTAMP}
          </when>
          <otherwise>
            <if test="entity.createdAt != null">,created_at = #{entity.createdAt}</if>
          </otherwise>
        </choose>
        <if test="!entity.incrementUpdateMap.isEmpty()">
          ,
          <foreach collection="entity.incrementUpdateMap" index="key" item="value" separator=",">
            ${key} = ${key} + #{value}
          </foreach>
        </if>
      </if>
    </trim>
  </sql>

  <sql id="sql_condition">
    <if test="condition != null">
      <if test="condition.id != null">AND id = #{condition.id}</if>
      <if test="condition.code != null and condition.code != ''">AND code = #{condition.code}</if>
      <if test="condition.type != null">AND type = #{condition.type}</if>
      <if test="condition.validTime != null">AND valid_time = #{condition.validTime}</if>
      <if test="condition.mobile != null and condition.mobile != ''">AND mobile = #{condition.mobile}</if>
      <if test="condition.userId != null">AND user_id = #{condition.userId}</if>
      <if test="condition.requestTimes != null">AND request_times = #{condition.requestTimes}</if>
      <if test="condition.status != null">AND status = #{condition.status}</if>
      <if test="condition.createdAt != null">AND created_at = #{condition.createdAt}</if>
      <if test="!condition.expressionChainList.empty">
        AND
        <foreach collection="condition.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  ${expression.column} ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  ${expression.column} ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  ${expression.column} ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </if>
  </sql>

  <sql id="sql_pagination_start">
  <![CDATA[
  ]]>
  </sql>

  <sql id="sql_pagination_end">
  <![CDATA[
    LIMIT #{offset}, #{limit}
  ]]>
  </sql>

  <insert id="insert" parameterType="java.util.Map">
    <selectKey keyProperty="entity.id" resultType="java.lang.Integer" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO ot_short_message (
      <include refid="sql_insert_column_list" />
    ) VALUES (
      <include refid="sql_insert_property_list" />
    )
  </insert>

  <select id="get" parameterType="java.util.Map" resultMap="shortMessage">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_short_message
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="getById" parameterType="java.util.Map" resultMap="shortMessage">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_short_message
    WHERE id = #{id}
  </select>

  <select id="find" parameterType="java.util.Map" resultMap="shortMessage">
    <if test="offset != null">
      <include refid="sql_pagination_start" />
    </if>
    SELECT
      <include refid="sql_column_list" />
    FROM ot_short_message
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="offset != null">
      <include refid="sql_pagination_end" />
    </if>
  </select>

  <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(${count_column}) AS count_ FROM ot_short_message
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT ${aggregate_sql} FROM ot_short_message
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <update id="update" parameterType="java.util.Map">
    UPDATE ot_short_message
    <include refid="sql_update_set" />
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </update>

  <update id="updateById" parameterType="java.util.Map">
    UPDATE ot_short_message
    <include refid="sql_update_set" />
    WHERE id = #{id}
  </update>

  <delete id="remove" parameterType="java.util.Map">
    DELETE FROM ot_short_message
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </delete>

  <delete id="removeById" parameterType="java.util.Map">
    DELETE FROM ot_short_message
    WHERE id = #{id}
  </delete>
</mapper>
