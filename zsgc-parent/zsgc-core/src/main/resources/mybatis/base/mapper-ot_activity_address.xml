<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="activityAddressDAO">
    <resultMap id="activityAddress" type="com.zsgc.core.model.ActivityAddress">
        <result property="id" column="id" />
        <!--<result property="shippingAddress" column="shipping_address" />-->
        <result property="recipients" column="recipients" />
        <result property="contactNumber" column="contact_number" />
        <result property="addressDetail" column="address_detail" />
        <result property="userId" column="user_id" />
    </resultMap>

    <sql id="sql_insert_column_list">
        <trim prefix="" prefixOverrides=",">
            <if test="entity.id != null">,id</if>
            <!--<if test="entity.shippingAddress != null">,shipping_address</if>-->
            <if test="entity.recipients != null">,recipients</if>
            <if test="entity.contactNumber != null">,contact_number</if>
            <if test="entity.addressDetail != null">,address_detail</if>
            <if test="entity.userId != null">,user_id</if>
        </trim>
    </sql>

    <sql id="sql_insert_property_list">
        <trim prefix="" prefixOverrides=",">
            <if test="entity.id != null">,#{entity.id}</if>
            <!--<if test="entity.shippingAddress != null">,#{entity.shippingAddress}</if>-->
            <if test="entity.recipients != null">,#{entity.recipients}</if>
            <if test="entity.contactNumber != null">,#{entity.contactNumber}</if>
            <if test="entity.addressDetail != null">,#{entity.addressDetail}</if>
            <if test="entity.userId != null">,#{entity.userId}</if>
        </trim>
    </sql>

    <sql id="sql_column_list">
        id
        ,recipients
        ,contact_number
        ,address_detail
        ,user_id
    </sql>

    <sql id="sql_update_set">
        <trim prefix="SET" prefixOverrides=",">
            <if test="entity != null">
                <choose>
                    <when test="entity.forceUpdateProperties.contains('id')">
                        ,id = #{entity.id, jdbcType=INTEGER}
                    </when>
                    <otherwise>
                        <if test="entity.id != null">,id = #{entity.id}</if>
                    </otherwise>
                </choose>
                <!--<choose>
                    <when test="entity.forceUpdateProperties.contains('shippingAddress')">
                        ,shipping_address = #{entity.shippingAddress, jdbcType=VARCHAR}
                    </when>
                    <otherwise>
                        <if test="entity.shippingAddress != null">, shipping_address= #{entity.shippingAddress}</if>
                    </otherwise>
                </choose>-->
                <choose>
                    <when test="entity.forceUpdateProperties.contains('recipients')">
                        , recipients= #{entity.recipients, jdbcType=VARCHAR}
                    </when>
                    <otherwise>
                        <if test="entity.recipients != null">, recipients= #{entity.recipients}</if>
                    </otherwise>
                </choose>
                <choose>
                    <when test="entity.forceUpdateProperties.contains('contactNumber')">
                        ,contact_number = #{entity.contactNumber, jdbcType=VARCHAR}
                    </when>
                    <otherwise>
                        <if test="entity.contactNumber != null">,contact_number = #{entity.contactNumber}</if>
                    </otherwise>
                </choose>
                <choose>
                    <when test="entity.forceUpdateProperties.contains('addressDetail')">
                        , address_detail= #{entity.addressDetail, jdbcType=VARCHAR}
                    </when>
                    <otherwise>
                        <if test="entity.addressDetail != null">, address_detail= #{entity.addressDetail}</if>
                    </otherwise>
                </choose>
                <choose>
                    <when test="entity.forceUpdateProperties.contains('userId')">
                        , user_id= #{entity.userId, jdbcType=INTEGER}
                    </when>
                    <otherwise>
                        <if test="entity.userId != null">, user_id= #{entity.userId}</if>
                    </otherwise>
                </choose>
                <if test="!entity.incrementUpdateMap.isEmpty()">
                    ,
                    <foreach collection="entity.incrementUpdateMap" index="key" item="value" separator=",">
                        ${key} = ${key} + #{value}
                    </foreach>
                </if>
            </if>
        </trim>
    </sql>

    <sql id="sql_condition">
        <if test="condition != null">
            <if test="condition.id != null">AND id = #{condition.id}</if>
            <!--<if test="condition.shippingAddress != null">AND shipping_address = #{condition.shippingAddress}</if>-->
            <if test="condition.recipients != null">AND recipients = #{condition.recipients}</if>
            <if test="condition.contactNumber != null">AND contact_number = #{condition.contactNumber}</if>
            <if test="condition.addressDetail != null">AND address_detail = #{condition.addressDetail}</if>
            <if test="condition.userId != null">AND user_id = #{condition.userId}</if>
            <if test="!condition.expressionChainList.empty">
                AND
                <foreach collection="condition.expressionChainList" item="expressionChain" separator="OR">
                    <if test="!expressionChain.expressionList.empty">
                        <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
                            <choose>
                                <when test="expression.type == 0">
                                    ${expression.column} ${expression.operator}
                                </when>
                                <when test="expression.type == 1">
                                    ${expression.column} ${expression.operator} #{expression.value}
                                </when>
                                <when test="expression.type == 2">
                                    ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                                </when>
                                <when test="expression.type == 3">
                                    ${expression.column} ${expression.operator}
                                    <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                                        #{value}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </if>
                </foreach>
            </if>
        </if>
    </sql>

    <sql id="sql_pagination_start">
        <![CDATA[
  ]]>
    </sql>

    <sql id="sql_pagination_end">
        <![CDATA[
    LIMIT #{offset}, #{limit}
  ]]>
    </sql>

    <insert id="insert" parameterType="java.util.Map">
        <selectKey keyProperty="entity.id" resultType="java.lang.Integer" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO ot_activity_address (
        <include refid="sql_insert_column_list" />
        ) VALUES (
        <include refid="sql_insert_property_list" />
        )
    </insert>

    <select id="get" parameterType="java.util.Map" resultMap="activityAddress">
        SELECT
        <include refid="sql_column_list" />
        FROM ot_activity_address
        <trim prefix="WHERE" prefixOverrides="AND">
            <include refid="sql_condition" />
        </trim>
    </select>

    <select id="getById" parameterType="java.util.Map" resultMap="activityAddress">
        SELECT
        <include refid="sql_column_list" />
        FROM ot_activity_address
        WHERE id = #{id}
    </select>

    <select id="find" parameterType="java.util.Map" resultMap="activityAddress">
        <if test="offset != null">
            <include refid="sql_pagination_start" />
        </if>
        SELECT
        <include refid="sql_column_list" />
        FROM ot_activity_address
        <trim prefix="WHERE" prefixOverrides="AND">
            <include refid="sql_condition" />
        </trim>
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
        <if test="offset != null">
            <include refid="sql_pagination_end" />
        </if>
    </select>

    <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(${count_column}) AS count_ FROM ot_activity_address
        <trim prefix="WHERE" prefixOverrides="AND">
            <include refid="sql_condition" />
        </trim>
    </select>

    <select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT ${aggregate_sql} FROM ot_activity_address
        <trim prefix="WHERE" prefixOverrides="AND">
            <include refid="sql_condition" />
        </trim>
    </select>

    <update id="update" parameterType="java.util.Map">
        UPDATE ot_activity_address
        <include refid="sql_update_set" />
        <trim prefix="WHERE" prefixOverrides="AND">
            <include refid="sql_condition" />
        </trim>
    </update>

    <update id="updateById" parameterType="java.util.Map">
        UPDATE ot_activity_address
        <include refid="sql_update_set" />
        WHERE id = #{id}
    </update>

    <delete id="remove" parameterType="java.util.Map">
        DELETE FROM ot_activity_address
        <trim prefix="WHERE" prefixOverrides="AND">
            <include refid="sql_condition" />
        </trim>
    </delete>

    <delete id="removeById" parameterType="java.util.Map">
        DELETE FROM ot_activity_address
        WHERE id = #{id}
    </delete>
</mapper>