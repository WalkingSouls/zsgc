<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bankDAO">
  <resultMap id="bank" type="com.zsgc.core.model.Bank">
    <result property="id" column="id" />
    <result property="name" column="name" />
    <result property="code" column="code" />
    <result property="icon" column="icon" />
    <result property="pcIcon" column="pc_icon" />
    <result property="backgroundImage" column="background_image" />
    <result property="pcBackgroundImage" column="pc_background_image" />
    <result property="status" column="status" />
    <result property="singleLimit" column="single_limit" />
    <result property="dailyAccumulativeLimit" column="daily_accumulative_limit" />
    <result property="monthlyAccumulativeLimit" column="monthly_accumulative_limit" />
    <result property="conditionsOfUsage" column="conditions_of_usage" />
    <result property="llpayCode" column="llpay_code" />
    <result property="bankNo" column="bank_no" />
    <result property="issInsCd" column="iss_ins_cd" />
  </resultMap>

  <sql id="sql_insert_column_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,id</if>
      <if test="entity.name != null and entity.name != ''">,name</if>
      <if test="entity.code != null and entity.code != ''">,code</if>
      <if test="entity.icon != null and entity.icon != ''">,icon</if>
      <if test="entity.pcIcon != null and entity.pcIcon != ''">,pc_icon</if>
      <if test="entity.backgroundImage != null and entity.backgroundImage != ''">,background_image</if>
      <if test="entity.pcBackgroundImage != null and entity.pcBackgroundImage != ''">,pc_background_image</if>
      <if test="entity.status != null">,status</if>
      <if test="entity.singleLimit != null and entity.singleLimit != ''">,single_limit</if>
      <if test="entity.dailyAccumulativeLimit != null and entity.dailyAccumulativeLimit != ''">,daily_accumulative_limit</if>
      <if test="entity.monthlyAccumulativeLimit != null and entity.monthlyAccumulativeLimit != ''">,monthly_accumulative_limit</if>
      <if test="entity.conditionsOfUsage != null and entity.conditionsOfUsage != ''">,conditions_of_usage</if>
      <if test="entity.llpayCode != null and entity.llpayCode != ''">,llpay_code</if>
      <if test="entity.bankNo != null and entity.bankNo != ''">,bank_no</if>
      <if test="entity.issInsCd != null and entity.issInsCd != ''">,iss_ins_cd</if>
    </trim>
  </sql>

  <sql id="sql_insert_property_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null">,#{entity.id}</if>
      <if test="entity.name != null and entity.name != ''">,#{entity.name}</if>
      <if test="entity.code != null and entity.code != ''">,#{entity.code}</if>
      <if test="entity.icon != null and entity.icon != ''">,#{entity.icon}</if>
      <if test="entity.pcIcon != null and entity.pcIcon != ''">,#{entity.pcIcon}</if>
      <if test="entity.backgroundImage != null and entity.backgroundImage != ''">,#{entity.backgroundImage}</if>
      <if test="entity.pcBackgroundImage != null and entity.pcBackgroundImage != ''">,#{entity.pcBackgroundImage}</if>
      <if test="entity.status != null">,#{entity.status}</if>
      <if test="entity.singleLimit != null and entity.singleLimit != ''">,#{entity.singleLimit}</if>
      <if test="entity.dailyAccumulativeLimit != null and entity.dailyAccumulativeLimit != ''">,#{entity.dailyAccumulativeLimit}</if>
      <if test="entity.monthlyAccumulativeLimit != null and entity.monthlyAccumulativeLimit != ''">,#{entity.monthlyAccumulativeLimit}</if>
      <if test="entity.conditionsOfUsage != null and entity.conditionsOfUsage != ''">,#{entity.conditionsOfUsage}</if>
      <if test="entity.llpayCode != null and entity.llpayCode != ''">,#{entity.llpayCode}</if>
      <if test="entity.bankNo != null and entity.bankNo != ''">,#{entity.bankNo}</if>
      <if test="entity.issInsCd != null and entity.issInsCd != ''">,#{entity.issInsCd}</if>
    </trim>
  </sql>

  <sql id="sql_column_list">
    id
    ,name
    ,code
    ,icon
    ,pc_icon
    ,background_image
    ,pc_background_image
    ,status
    ,single_limit
    ,daily_accumulative_limit
    ,monthly_accumulative_limit
    ,conditions_of_usage
    ,llpay_code
    ,bank_no
    ,iss_ins_cd
  </sql>

  <sql id="sql_update_set">
    <trim prefix="SET" prefixOverrides=",">
      <if test="entity != null">
        <choose>
          <when test="entity.forceUpdateProperties.contains('id')">
            ,id = #{entity.id, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.id != null">,id = #{entity.id}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('name')">
            ,name = #{entity.name, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.name != null and entity.name != ''">,name = #{entity.name}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('code')">
            ,code = #{entity.code, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.code != null and entity.code != ''">,code = #{entity.code}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('icon')">
            ,icon = #{entity.icon, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.icon != null and entity.icon != ''">,icon = #{entity.icon}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('pcIcon')">
            ,pc_icon = #{entity.pcIcon, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.pcIcon != null and entity.pcIcon != ''">,pc_icon = #{entity.pcIcon}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('backgroundImage')">
            ,background_image = #{entity.backgroundImage, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.backgroundImage != null and entity.backgroundImage != ''">,background_image = #{entity.backgroundImage}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('pcBackgroundImage')">
            ,pc_background_image = #{entity.pcBackgroundImage, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.pcBackgroundImage != null and entity.pcBackgroundImage != ''">,pc_background_image = #{entity.pcBackgroundImage}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('status')">
            ,status = #{entity.status, jdbcType=INTEGER}
          </when>
          <otherwise>
            <if test="entity.status != null">,status = #{entity.status}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('singleLimit')">
            ,single_limit = #{entity.singleLimit, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.singleLimit != null and entity.singleLimit != ''">,single_limit = #{entity.singleLimit}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('dailyAccumulativeLimit')">
            ,daily_accumulative_limit = #{entity.dailyAccumulativeLimit, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.dailyAccumulativeLimit != null and entity.dailyAccumulativeLimit != ''">,daily_accumulative_limit = #{entity.dailyAccumulativeLimit}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('monthlyAccumulativeLimit')">
            ,monthly_accumulative_limit = #{entity.monthlyAccumulativeLimit, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.monthlyAccumulativeLimit != null and entity.monthlyAccumulativeLimit != ''">,monthly_accumulative_limit = #{entity.monthlyAccumulativeLimit}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('conditionsOfUsage')">
            ,conditions_of_usage = #{entity.conditionsOfUsage, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.conditionsOfUsage != null and entity.conditionsOfUsage != ''">,conditions_of_usage = #{entity.conditionsOfUsage}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('llpayCode')">
            ,llpay_code = #{entity.llpayCode, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.llpayCode != null and entity.llpayCode != ''">,llpay_code = #{entity.llpayCode}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('bankNo')">
            ,bank_no = #{entity.bankNo, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.bankNo != null and entity.bankNo != ''">,bank_no = #{entity.bankNo}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('issInsCd')">
            ,iss_ins_cd = #{entity.issInsCd, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.issInsCd != null and entity.issInsCd != ''">,iss_ins_cd = #{entity.issInsCd}</if>
          </otherwise>
        </choose>
        <if test="!entity.incrementUpdateMap.isEmpty()">
          ,
          <foreach collection="entity.incrementUpdateMap" index="key" item="value" separator=",">
            ${key} = ${key} + #{value}
          </foreach>
        </if>
      </if>
    </trim>
  </sql>

  <sql id="sql_condition">
    <if test="condition != null">
      <if test="condition.id != null">AND id = #{condition.id}</if>
      <if test="condition.name != null and condition.name != ''">AND name = #{condition.name}</if>
      <if test="condition.code != null and condition.code != ''">AND code = #{condition.code}</if>
      <if test="condition.icon != null and condition.icon != ''">AND icon = #{condition.icon}</if>
      <if test="condition.pcIcon != null and condition.pcIcon != ''">AND pc_icon = #{condition.pcIcon}</if>
      <if test="condition.backgroundImage != null and condition.backgroundImage != ''">AND background_image = #{condition.backgroundImage}</if>
      <if test="condition.pcBackgroundImage != null and condition.pcBackgroundImage != ''">AND pc_background_image = #{condition.pcBackgroundImage}</if>
      <if test="condition.status != null">AND status = #{condition.status}</if>
      <if test="condition.singleLimit != null and condition.singleLimit != ''">AND single_limit = #{condition.singleLimit}</if>
      <if test="condition.dailyAccumulativeLimit != null and condition.dailyAccumulativeLimit != ''">AND daily_accumulative_limit = #{condition.dailyAccumulativeLimit}</if>
      <if test="condition.monthlyAccumulativeLimit != null and condition.monthlyAccumulativeLimit != ''">AND monthly_accumulative_limit = #{condition.monthlyAccumulativeLimit}</if>
      <if test="condition.conditionsOfUsage != null and condition.conditionsOfUsage != ''">AND conditions_of_usage = #{condition.conditionsOfUsage}</if>
      <if test="condition.llpayCode != null and condition.llpayCode != ''">AND llpay_code = #{condition.llpayCode}</if>
      <if test="condition.bankNo != null and condition.bankNo != ''">AND bank_no = #{condition.bankNo}</if>
      <if test="condition.issInsCd != null and condition.issInsCd != ''">AND iss_ins_cd = #{condition.issInsCd}</if>
      <if test="!condition.expressionChainList.empty">
        AND
        <foreach collection="condition.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  ${expression.column} ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  ${expression.column} ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  ${expression.column} ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </if>
  </sql>

  <sql id="sql_pagination_start">
  <![CDATA[
  ]]>
  </sql>

  <sql id="sql_pagination_end">
  <![CDATA[
    LIMIT #{offset}, #{limit}
  ]]>
  </sql>

  <insert id="insert" parameterType="java.util.Map">
    <selectKey keyProperty="entity.id" resultType="java.lang.Integer" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO ot_bank (
      <include refid="sql_insert_column_list" />
    ) VALUES (
      <include refid="sql_insert_property_list" />
    )
  </insert>

  <select id="get" parameterType="java.util.Map" resultMap="bank">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_bank
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="getById" parameterType="java.util.Map" resultMap="bank">
    SELECT
      <include refid="sql_column_list" />
    FROM ot_bank
    WHERE id = #{id}
  </select>

  <select id="find" parameterType="java.util.Map" resultMap="bank">
    <if test="offset != null">
      <include refid="sql_pagination_start" />
    </if>
    SELECT
      <include refid="sql_column_list" />
    FROM ot_bank
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="offset != null">
      <include refid="sql_pagination_end" />
    </if>
  </select>

  <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(${count_column}) AS count_ FROM ot_bank
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT ${aggregate_sql} FROM ot_bank
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <update id="update" parameterType="java.util.Map">
    UPDATE ot_bank
    <include refid="sql_update_set" />
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </update>

  <update id="updateById" parameterType="java.util.Map">
    UPDATE ot_bank
    <include refid="sql_update_set" />
    WHERE id = #{id}
  </update>

  <delete id="remove" parameterType="java.util.Map">
    DELETE FROM ot_bank
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </delete>

  <delete id="removeById" parameterType="java.util.Map">
    DELETE FROM ot_bank
    WHERE id = #{id}
  </delete>
</mapper>
